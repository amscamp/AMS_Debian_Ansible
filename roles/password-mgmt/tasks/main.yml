---
- name: get wallet folders
  shell: qdbus org.kde.kwalletd5 /modules/kwalletd5 folderList "$(qdbus org.kde.kwalletd5 /modules/kwalletd5 org.kde.KWallet.open {{ passwd_wallet }} 0 "{{ passwd_folder }}")" "{{ passwd_folder }}" 
  become: true
  become_method: su
  become_user: "{{ wallet_username }}"
  register: walletfolders
  environment:
      DISPLAY: ":0"

- name: create wallet folder
  shell: qdbus org.kde.kwalletd5 /modules/kwalletd5 createFolder "$(qdbus org.kde.kwalletd5 /modules/kwalletd5 org.kde.KWallet.open {{ passwd_wallet }} 0 "{{ passwd_folder }}")" "{{ passwd_folder }}" "{{ passwd_folder }}"
  become: true
  become_method: su
  become_user: "{{ wallet_username }}"
  when: not walletfolders.stdout is search(passwd_folder)
  environment:
      DISPLAY: ":0"


- name: get wallet folder entrys
  shell: qdbus org.kde.kwalletd5 /modules/kwalletd5 entryList "$(qdbus org.kde.kwalletd5 /modules/kwalletd5 org.kde.KWallet.open {{ passwd_wallet }} 0 "{{ passwd_folder }}")" "{{ passwd_folder }}" "{{ passwd_folder }}"
  become: true
  become_method: su
  become_user: "{{ wallet_username }}"
  register: wallet_entrys
  environment:
      DISPLAY: ":0"


- name: create wallet entrys if they not exist
  shell: qdbus org.kde.kwalletd5 /modules/kwalletd5 writePassword "$(qdbus org.kde.kwalletd5 /modules/kwalletd5 org.kde.KWallet.open {{ passwd_wallet }} 0 "{{ passwd_folder }}")" "{{ passwd_folder }}" "{{ item.key }}" "{{ item.value }}" "{{ passwd_folder }}"
  become: true
  become_method: su
  become_user: "{{ wallet_username }}"
  when: not wallet_entrys.stdout is search(item.key)
  loop: "{{default_entries}}"
  environment:
      DISPLAY: ":0"



- name: get wallet folder entrys
  shell: qdbus org.kde.kwalletd5 /modules/kwalletd5 entryList "$(qdbus org.kde.kwalletd5 /modules/kwalletd5 org.kde.KWallet.open {{ passwd_wallet }} 0 "{{ passwd_folder }}")" "{{ passwd_folder }}" "{{ passwd_folder }}"
  become: true
  become_method: su
  become_user: "{{ wallet_username }}"
  register: wallet_entrys
  environment:
      DISPLAY: ":0"

- name: change root password if entry exists
  shell: qdbus org.kde.kwalletd5 /modules/kwalletd5 readPassword "$(qdbus org.kde.kwalletd5 /modules/kwalletd5 org.kde.KWallet.open {{ passwd_wallet }} 0 "{{ passwd_folder }}")" "{{ passwd_folder }}" "RootPW" "{{ passwd_folder }}" | passwd root --stdin
  when: wallet_entrys.stdout is search("RootPW")
  environment:
      DISPLAY: ":0"

- name: change {{ password_username }} password if entry exists
  shell: qdbus org.kde.kwalletd5 /modules/kwalletd5 readPassword "$(qdbus org.kde.kwalletd5 /modules/kwalletd5 org.kde.KWallet.open {{ passwd_wallet }} 0 "{{ passwd_folder }}")" "{{ passwd_folder }}" "UserPW" "{{ passwd_folder }}" | passwd {{ password_username }} --stdin
  when: wallet_entrys.stdout is search("UserPW")
  environment:
      DISPLAY: ":0"

- name: get default enc pw
  debug:
    msg: "{{ default_entries | selectattr('key', 'equalto', 'Encryption') | map(attribute='value') | list }}"




# - name: change encryption password if entry exists
#   shell: |
#     mkpipe fifo
#     echo -n "oldpass" | cryptsetup luksAddKey --key-file - test.img fifo &
#     echo -m "newpass" > fifo
  
  
  
  
#   qdbus org.kde.kwalletd5 /modules/kwalletd5 readPassword "$(qdbus org.kde.kwalletd5 /modules/kwalletd5 org.kde.KWallet.open {{ passwd_wallet }} 0 "{{ passwd_folder }}")" "{{ passwd_folder }}" "Encryption" "{{ passwd_folder }}" | passwd {{ password_username }} --stdin
#   when: wallet_entrys.stdout is search("Encryption")


#   sudo cryptsetup luksChangeKey /dev/disk/by-uuid/$(cat /etc/crypttab | sed -e "s|\(.*\) UUID=\(.*\) none.*|\2|g")